const mongoose = require("mongoose");

const userSchema = new mongoose.Schema({
    token: String,
    user_name: { type: String, unique: true },
    password: { type: String, minlength: 6 },
    whatsapp_number: { type: String, trim: true, unique: true },
    email: { type: String, trim: true, unique: true },
    full_name: { type: String, trim: true },
    nick_name: { type: String, trim: true },
    gender: { type: String, trim: true },
    dob: { type: Date, trim: true },
    birth_time: { type: String },
    birth_place: { type: String, trim: true },
    pin_code: { type: String, trim: true },
    country: { type: String, trim: true },
    city: { type: String, trim: true },
    locality: { type: String, trim: true },
    address: { type: String, trim: true },
    nationality: { type: String, trim: true },
    nationality_details: { type: String, trim: true },
    religion: { type: String, trim: true },
    community: { type: String, trim: true },
    medical_history: { type: String, trim: true },
    height: { type: String, trim: true },
    weight: { type: String, trim: true },
    marital_status: { type: String, trim: true },
    should_weight_display_on_profile: { type: Boolean, default: false },
    do_have_kids: { type: String, trim: true },
    father_name: { type: String, trim: true },
    mother_name: { type: String, trim: true },
    father_occupation: { type: String, trim: true },
    mother_occupation: { type: String, trim: true },
    no_of_siblings: { type: String, trim: true },
    sibling_details: { type: Array },
    family_background: { type: String, trim: true },
    family_description: { type: String, trim: true },
    family_anual_income: { type: String, trim: true },
    highest_qualification: { type: String, trim: true },
    school_name: { type: String, trim: true },
    ug_college_name: { type: String, trim: true },
    pg_college_name: { type: String, trim: true },
    phd_college_name: { type: String, trim: true },
    other_qualification_details: { type: String, trim: true },
    highest_degree: { type: String, trim: true },
    hometown: { type: String, trim: true },
    nature_of_work: { type: String, trim: true },
    industry: { type: String, trim: true },
    organization: { type: String, trim: true },
    designation: { type: String, trim: true },
    personal_anual_income: { type: String, trim: true },
    business_turnover: { type: String, trim: true },
    business_website: { type: String, trim: true },
    profile_picture: String,
    family_picture: String,
    full_body_picture: String,
    fun_picture: String,
    user_type: { type: String, enum: ["user", "admin"], default: "user" },
    eating_preferences: { type: String, trim: true },
    how_often_you_drink: { type: String, trim: true },
    are_you_a_smoker: { type: String, trim: true },
    how_often_you_workout: { type: String, trim: true },
    favourite_weekend_activities: { type: Array },
    holidays_prefrences: { type: Array },
    how_often_you_eat_out: String,
    how_often_you_travel: String,
    prefered_social_event: String,
    whom_do_you_like_going_out_with: String,
    how_spiritual_are_you: String,
    how_religious_are_you: String,
    about_yourself: String,
    marital_status_from_year: Number,
    marital_status_to_year: Number,
    subscription_end_date: Date,
    is_subscribed: { type: Boolean, default: false },
    profile_status: { type: Boolean, default: true }, //true = open | false = pause 
    profile_type: { type: Boolean, default: true }, //true = open | false = confidential 
    psychometric_test: { type: Boolean, default: false },
    psychometric_category: String,
    category: String,
    interests: { type: Array },
    image: { type: Object },
    registration_status: {
        type: String,
        default: 0 // 0 = incomplete 1=complete
    },
    member_type: {
        type: Boolean,
        default: 0 // ``0 = Non member, 1 = Member``;
    },
    registration_step: {
        type: String,
        default: 0
    },
    is_del: {
        type: Boolean,
        default: false
    }

}, { timestamps: true })


module.exports = new mongoose.model('user', userSchema);
